#!/usr/bin/env node

const program = require('commander')
const chalk = require('chalk')
const package = require('../package.json')
const Px2vw = require('../index')
const fs = require('fs')
const path = require('path')
const cwd = process.cwd()

program
  .version(package.version, '-v, -version')
  .description('pv2rem parse dir')
  .usage('[file]')
  .option('-w, --vw [value]', 'set vw unit value. default: 375', 375)
  .option('-p, --precision [value]', 'set value precision, default: 4', 4)
  .option('-o, --output [path]', 'set output path, overwrite the input file by default')
  .option('-l, --list [value]', 'set px2vw white list')
  .option('-m, --media [value]', 'set whether to ignore media query', true)

program.on('--help', function(){
  console.log('')
  console.log('  Examples:')
  console.log('')
  console.log('    $ px2vw ./**/*.css -w 375')
  console.log('    $ px2vw -h')
})

program.parse(process.argv)

const args = program.args

if (args.length === 0) {
  console.error('\n Error: input file is required \n')

  process.exit(0)
}

const config = {
  vw: program.vw,
  precision: program.precision,
  whiteList: program.list ? program.list.split(',') : [],
  ignoreMediaQuery: program.media === 'true'
}

const px2vw = new Px2vw(config)

args.forEach((file) => {

  if (path.extname(file) !== '.css') {
    console.error('\n Error: must be css file \n')

    process.exit(0)
  }

  const filePath = path.resolve(cwd, file)  
  const cssText = fs.readFileSync(filePath).toString()
  const processedCssText = px2vw.processCss(cssText)

  if (program.output) {
    fs.writeFileSync(path.join(output, file), processedCssText)
  } else {
    fs.writeFileSync(filePath, processedCssText)
  }
})